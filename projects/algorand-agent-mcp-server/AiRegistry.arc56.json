{
    "name": "AiRegistry",
    "structs": {},
    "methods": [
        {
            "name": "issue_payment",
            "args": [
                {
                    "type": "uint64",
                    "name": "amount"
                },
                {
                    "type": "account",
                    "name": "receiver"
                },
                {
                    "type": "string",
                    "name": "agent_name"
                },
                {
                    "type": "byte[]",
                    "name": "agent_p_key"
                },
                {
                    "type": "byte[]",
                    "name": "signature"
                },
                {
                    "type": "uint64",
                    "name": "first_valid_round"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {
                "last_valid": {
                    "keyType": "AVMBytes",
                    "valueType": "AVMUint64",
                    "key": "bHY="
                }
            }
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        161
                    ],
                    "errorMessage": "Invalid signature"
                },
                {
                    "pc": [
                        37
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        86
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        40
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        135
                    ],
                    "errorMessage": "check self.last_valid exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBzbWFydF9jb250cmFjdHMuYWlfcmVnaXN0cnkuY29udHJhY3QuQWlSZWdpc3RyeS5fX2FsZ29weV9lbnRyeXBvaW50X3dpdGhfaW5pdCgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayAxIDAKICAgIGJ5dGVjYmxvY2sgMHg2Yzc2IDB4MDY4MTAxCiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9iYXJlX3JvdXRpbmdANgogICAgcHVzaGJ5dGVzIDB4MGQ0ZTg1YjcgLy8gbWV0aG9kICJpc3N1ZV9wYXltZW50KHVpbnQ2NCxhY2NvdW50LHN0cmluZyxieXRlW10sYnl0ZVtdLHVpbnQ2NCl2b2lkIgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgbWF0Y2ggbWFpbl9pc3N1ZV9wYXltZW50X3JvdXRlQDUKCm1haW5fYWZ0ZXJfaWZfZWxzZUA4OgogICAgaW50Y18xIC8vIDAKICAgIHJldHVybgoKbWFpbl9pc3N1ZV9wYXltZW50X3JvdXRlQDU6CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGJ0b2kKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgIGJ0b2kKICAgIHR4bmFzIEFjY291bnRzCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAzCiAgICBleHRyYWN0IDIgMAogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgNAogICAgZXh0cmFjdCAyIDAKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDUKICAgIGV4dHJhY3QgMiAwCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyA2CiAgICBidG9pCiAgICBjYWxsc3ViIGlzc3VlX3BheW1lbnQKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fYmFyZV9yb3V0aW5nQDY6CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBibnogbWFpbl9hZnRlcl9pZl9lbHNlQDgKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgoKLy8gc21hcnRfY29udHJhY3RzLmFpX3JlZ2lzdHJ5LmNvbnRyYWN0LkFpUmVnaXN0cnkuaXNzdWVfcGF5bWVudChhbW91bnQ6IHVpbnQ2NCwgcmVjZWl2ZXI6IGJ5dGVzLCBhZ2VudF9uYW1lOiBieXRlcywgYWdlbnRfcF9rZXk6IGJ5dGVzLCBzaWduYXR1cmU6IGJ5dGVzLCBmaXJzdF92YWxpZF9yb3VuZDogdWludDY0KSAtPiB2b2lkOgppc3N1ZV9wYXltZW50OgogICAgcHJvdG8gNiAwCgppc3N1ZV9wYXltZW50X3doaWxlX3RvcEA1OgogICAgcHVzaGludCAxOTEwIC8vIDE5MTAKICAgIGdsb2JhbCBPcGNvZGVCdWRnZXQKICAgID4KICAgIGJ6IGlzc3VlX3BheW1lbnRfYWZ0ZXJfd2hpbGVAMTAKICAgIGl0eG5fYmVnaW4KICAgIHB1c2hpbnQgNiAvLyBhcHBsCiAgICBpdHhuX2ZpZWxkIFR5cGVFbnVtCiAgICBwdXNoaW50IDUgLy8gRGVsZXRlQXBwbGljYXRpb24KICAgIGl0eG5fZmllbGQgT25Db21wbGV0aW9uCiAgICBieXRlY18xIC8vIDB4MDY4MTAxCiAgICBpdHhuX2ZpZWxkIEFwcHJvdmFsUHJvZ3JhbQogICAgYnl0ZWNfMSAvLyAweDA2ODEwMQogICAgaXR4bl9maWVsZCBDbGVhclN0YXRlUHJvZ3JhbQogICAgaW50Y18xIC8vIDAKICAgIGl0eG5fZmllbGQgRmVlCiAgICBpdHhuX3N1Ym1pdAogICAgYiBpc3N1ZV9wYXltZW50X3doaWxlX3RvcEA1Cgppc3N1ZV9wYXltZW50X2FmdGVyX3doaWxlQDEwOgogICAgYnl0ZWNfMCAvLyAweDZjNzYKICAgIGJveF9sZW4KICAgIGJ1cnkgMQogICAgYnogaXNzdWVfcGF5bWVudF9hZnRlcl9pZl9lbHNlQDIKICAgIGJ5dGVjXzAgLy8gMHg2Yzc2CiAgICBib3hfZ2V0CiAgICBzd2FwCiAgICBidG9pCiAgICBzd2FwCiAgICBhc3NlcnQgLy8gY2hlY2sgc2VsZi5sYXN0X3ZhbGlkIGV4aXN0cwogICAgZnJhbWVfZGlnIC0xCiAgICA8CiAgICBhc3NlcnQKCmlzc3VlX3BheW1lbnRfYWZ0ZXJfaWZfZWxzZUAyOgogICAgZnJhbWVfZGlnIC02CiAgICBpdG9iCiAgICBmcmFtZV9kaWcgLTUKICAgIGNvbmNhdAogICAgZnJhbWVfZGlnIC00CiAgICBjb25jYXQKICAgIGZyYW1lX2RpZyAtMQogICAgaXRvYgogICAgc3dhcAogICAgZGlnIDEKICAgIGNvbmNhdAogICAgZnJhbWVfZGlnIC0yCiAgICBmcmFtZV9kaWcgLTMKICAgIGVkMjU1MTl2ZXJpZnlfYmFyZQogICAgYXNzZXJ0IC8vIEludmFsaWQgc2lnbmF0dXJlCiAgICBpdHhuX2JlZ2luCiAgICBmcmFtZV9kaWcgLTYKICAgIGl0eG5fZmllbGQgQW1vdW50CiAgICBmcmFtZV9kaWcgLTUKICAgIGl0eG5fZmllbGQgUmVjZWl2ZXIKICAgIGludGNfMCAvLyBwYXkKICAgIGl0eG5fZmllbGQgVHlwZUVudW0KICAgIHB1c2hpbnQgMTAwMDAwIC8vIDEwMDAwMAogICAgaXR4bl9maWVsZCBGZWUKICAgIGl0eG5fc3VibWl0CiAgICBieXRlY18wIC8vIDB4NmM3NgogICAgc3dhcAogICAgYm94X3B1dAogICAgcmV0c3ViCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAQAmAgJsdgMGgQExG0EAO4AEDU6FtzYaAI4BAAIjQzEZFEQxGEQ2GgEXNhoCF8AcNhoDVwIANhoEVwIANhoFVwIANhoGF4gADSJDMRlA/80xGBREIkOKBgCB9g4yDA1BABaxgQayEIEFshkpsh4psh8jsgGzQv/hKL1FAUEACii+TBdMRIv/DESL+haL+1CL/FCL/xZMSwFQi/6L/YREsYv6sgiL+7IHIrIQgaCNBrIBsyhMv4k=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 6,
            "patch": 1
        }
    },
    "events": [],
    "templateVariables": {}
}