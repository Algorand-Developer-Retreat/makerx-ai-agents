{
  "version": 3,
  "sources": [
    "../../ai_lsig/contract.py"
  ],
  "mappings": "AAMW;;AAAwB;;AAAxB;AAAP;AACO;;AAAgC;AAAhC;AAAP;AAGO;;AAAuB;;AAAvB;AAAP;AACO;;AAAiC;;AAAjC;AAAP;AACO;;AAAA;AAAP;AACO;;AAAP",
  "op_pc_offset": 1,
  "pc_events": {
    "0": {
      "op": "txn TypeEnum",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "appl"
      ]
    },
    "4": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "5": {
      "op": "assert",
      "stack_out": []
    },
    "6": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "8": {
      "op": "intc_0 // TMPL_AI_REGISTRY_APP_ID",
      "defined_out": [
        "TMPL_AI_REGISTRY_APP_ID",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "TMPL_AI_REGISTRY_APP_ID"
      ]
    },
    "9": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "10": {
      "op": "assert",
      "stack_out": []
    },
    "11": {
      "op": "txn RekeyTo",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "13": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "15": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "16": {
      "op": "assert",
      "stack_out": []
    },
    "17": {
      "op": "txn CloseRemainderTo",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "19": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "21": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "22": {
      "op": "assert",
      "stack_out": []
    },
    "23": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "25": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "26": {
      "op": "assert",
      "stack_out": []
    },
    "27": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "29": {
      "op": "return",
      "stack_out": []
    }
  }
}