{
  "version": 3,
  "sources": [
    "../../ai_registry/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;AAeA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;;AAIK;;AAAA;AAAA;AAAA;;AAAA;AAJL;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAIK;;;AAAA;;AAJL;;AAAA;;;;;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYW;AAAA;AAAA;;AAAX;;;AACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AAIA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAGE;;AAAA;AAJN;AAAA;;AACI;AAOG;;AAAA;;AAAA;AAAP;AAKA;;;;;;;;;AAAA;;;AAAmD;;;;;;AAAnD;AAGA;AAAA;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.ai_registry.contract.AiRegistry.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0"
    },
    "5": {
      "op": "bytecblock 0x6c76 0x068101"
    },
    "14": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "16": {
      "op": "bz main_bare_routing@6",
      "stack_out": []
    },
    "19": {
      "op": "pushbytes 0x0d4e85b7 // method \"issue_payment(uint64,account,string,byte[],byte[],uint64)void\"",
      "defined_out": [
        "Method(issue_payment(uint64,account,string,byte[],byte[],uint64)void)"
      ],
      "stack_out": [
        "Method(issue_payment(uint64,account,string,byte[],byte[],uint64)void)"
      ]
    },
    "25": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(issue_payment(uint64,account,string,byte[],byte[],uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(issue_payment(uint64,account,string,byte[],byte[],uint64)void)",
        "tmp%2#0"
      ]
    },
    "28": {
      "op": "match main_issue_payment_route@5",
      "stack_out": []
    },
    "32": {
      "block": "main_after_if_else@8",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "33": {
      "op": "return",
      "stack_out": []
    },
    "34": {
      "block": "main_issue_payment_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "36": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "37": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "38": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "40": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "41": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "44": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "45": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "48": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "49": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "51": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%10#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "54": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%11#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "57": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "60": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%11#0",
        "tmp%13#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "63": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "tmp%11#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "66": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%11#0",
        "tmp%13#0",
        "tmp%15#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%15#0"
      ]
    },
    "69": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%15#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%15#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "72": {
      "op": "btoi",
      "defined_out": [
        "tmp%11#0",
        "tmp%13#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "73": {
      "callsub": "smart_contracts.ai_registry.contract.AiRegistry.issue_payment",
      "op": "callsub issue_payment",
      "stack_out": []
    },
    "76": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "77": {
      "op": "return",
      "stack_out": []
    },
    "78": {
      "block": "main_bare_routing@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "80": {
      "op": "bnz main_after_if_else@8",
      "stack_out": []
    },
    "83": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "85": {
      "op": "!",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "86": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "87": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "88": {
      "op": "return",
      "stack_out": []
    },
    "89": {
      "subroutine": "smart_contracts.ai_registry.contract.AiRegistry.issue_payment",
      "params": {
        "amount#0": "uint64",
        "receiver#0": "bytes",
        "agent_name#0": "bytes",
        "agent_p_key#0": "bytes",
        "signature#0": "bytes",
        "first_valid_round#0": "uint64"
      },
      "block": "issue_payment",
      "stack_in": [],
      "op": "proto 6 0"
    },
    "92": {
      "block": "issue_payment_while_top@5",
      "stack_in": [],
      "op": "pushint 1910 // 1910",
      "defined_out": [
        "1910"
      ],
      "stack_out": [
        "1910"
      ]
    },
    "95": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "1910",
        "tmp%0#1"
      ],
      "stack_out": [
        "1910",
        "tmp%0#1"
      ]
    },
    "97": {
      "op": ">",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "98": {
      "op": "bz issue_payment_after_while@10",
      "stack_out": []
    },
    "101": {
      "op": "itxn_begin"
    },
    "102": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "104": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "106": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication"
      ],
      "stack_out": [
        "DeleteApplication"
      ]
    },
    "108": {
      "op": "itxn_field OnCompletion",
      "stack_out": []
    },
    "110": {
      "op": "bytec_1 // 0x068101",
      "defined_out": [
        "0x068101"
      ],
      "stack_out": [
        "0x068101"
      ]
    },
    "111": {
      "op": "itxn_field ApprovalProgram",
      "stack_out": []
    },
    "113": {
      "op": "bytec_1 // 0x068101",
      "stack_out": [
        "0x068101"
      ]
    },
    "114": {
      "op": "itxn_field ClearStateProgram",
      "stack_out": []
    },
    "116": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "117": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "119": {
      "op": "itxn_submit"
    },
    "120": {
      "op": "b issue_payment_while_top@5"
    },
    "123": {
      "block": "issue_payment_after_while@10",
      "stack_in": [],
      "op": "bytec_0 // 0x6c76",
      "defined_out": [
        "0x6c76"
      ],
      "stack_out": [
        "0x6c76"
      ]
    },
    "124": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "125": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "127": {
      "op": "bz issue_payment_after_if_else@2",
      "stack_out": []
    },
    "130": {
      "op": "bytec_0 // 0x6c76",
      "stack_out": [
        "0x6c76"
      ]
    },
    "131": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "132": {
      "op": "swap",
      "stack_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ]
    },
    "133": {
      "op": "btoi",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value_converted%0#0"
      ],
      "stack_out": [
        "maybe_exists%1#0",
        "maybe_value_converted%0#0"
      ]
    },
    "134": {
      "op": "swap",
      "stack_out": [
        "maybe_value_converted%0#0",
        "maybe_exists%1#0"
      ]
    },
    "135": {
      "error": "check self.last_valid exists",
      "op": "assert // check self.last_valid exists",
      "stack_out": [
        "maybe_value_converted%0#0"
      ]
    },
    "136": {
      "op": "frame_dig -1",
      "defined_out": [
        "first_valid_round#0 (copy)",
        "maybe_value_converted%0#0"
      ],
      "stack_out": [
        "maybe_value_converted%0#0",
        "first_valid_round#0 (copy)"
      ]
    },
    "138": {
      "op": "<",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "139": {
      "op": "assert",
      "stack_out": []
    },
    "140": {
      "block": "issue_payment_after_if_else@2",
      "stack_in": [],
      "op": "frame_dig -6",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0 (copy)"
      ]
    },
    "142": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "143": {
      "op": "frame_dig -5",
      "defined_out": [
        "receiver#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "receiver#0 (copy)"
      ]
    },
    "145": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "146": {
      "op": "frame_dig -4",
      "defined_out": [
        "agent_name#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "agent_name#0 (copy)"
      ]
    },
    "148": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "149": {
      "op": "frame_dig -1",
      "defined_out": [
        "first_valid_round#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "first_valid_round#0 (copy)"
      ]
    },
    "151": {
      "op": "itob",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "152": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0"
      ]
    },
    "153": {
      "op": "dig 1",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%4#0 (copy)"
      ]
    },
    "155": {
      "op": "concat",
      "defined_out": [
        "payment_data#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "payment_data#0"
      ]
    },
    "156": {
      "op": "frame_dig -2",
      "defined_out": [
        "payment_data#0",
        "signature#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "payment_data#0",
        "signature#0 (copy)"
      ]
    },
    "158": {
      "op": "frame_dig -3",
      "defined_out": [
        "agent_p_key#0 (copy)",
        "payment_data#0",
        "signature#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "payment_data#0",
        "signature#0 (copy)",
        "agent_p_key#0 (copy)"
      ]
    },
    "160": {
      "op": "ed25519verify_bare",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "161": {
      "error": "Invalid signature",
      "op": "assert // Invalid signature",
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "162": {
      "op": "itxn_begin"
    },
    "163": {
      "op": "frame_dig -6",
      "stack_out": [
        "tmp%4#0",
        "amount#0 (copy)"
      ]
    },
    "165": {
      "op": "itxn_field Amount",
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "167": {
      "op": "frame_dig -5",
      "stack_out": [
        "tmp%4#0",
        "receiver#0 (copy)"
      ]
    },
    "169": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "171": {
      "op": "intc_0 // pay",
      "defined_out": [
        "pay",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "pay"
      ]
    },
    "172": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "174": {
      "op": "pushint 100000 // 100000",
      "defined_out": [
        "100000",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "100000"
      ]
    },
    "178": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "180": {
      "op": "itxn_submit"
    },
    "181": {
      "op": "bytec_0 // 0x6c76",
      "defined_out": [
        "0x6c76",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0x6c76"
      ]
    },
    "182": {
      "op": "swap",
      "stack_out": [
        "0x6c76",
        "tmp%4#0"
      ]
    },
    "183": {
      "op": "box_put",
      "stack_out": []
    },
    "184": {
      "retsub": true,
      "op": "retsub"
    }
  }
}